Ansible Contriller
ssh ubuntu@3.128.76.85


=======================
Create Role - mytomcat-role
=======================
 Use ansible-galaxy command to create a Ansible roles which has the templates to create it. 

A) On Ansible Controller
===================
1) Create mytomcat-playbook.yml under MyWork

touch mytomcat-playbook.yml

2) Open Roles folder

cd roles

3) Create the Role using ansible-galaxy command

roles> ansible-galaxy  init mytomcat-role
- Role mytomcat-role was created successfully

4) You can see mytomcat-role is created and observe following directory sructure.

roles $  ls -l

roles $  tree mytomcat-role

mywork/roles $ tree mytomcat-role

hello-role
├── README.md
├── defaults
│   └── main.yml
├── files
├── handlers
│   └── main.yml
├── meta
│   └── main.yml
├── tasks
│   └── main.yml
├── templates
├── tests
│   ├── inventory
│   └── test.yml
└── vars
    └── main.yml


5) Remove the folders which are not required

mywork/roles/mytomcat-role $ rm -rf defaults tests meta

6) See the Directory structure after Removing unnecessary

roles $  tree mytomcat-role

mywork/roles $ tree mytomcat-role

mytomcat-role
├── README.md
├── files
├── handlers
│   └── main.yml
├── tasks
│   └── main.yml
├── templates
└── vars
    └── main.yml

B) On Local Machine
===================
7) Create the Directory structure for mytomcat-role in local machine.

8) Create mytomcat-role folder in roles folder

9)  Create vars folder  mytomcat-role folder

10) Write main.yml in vars  folder as follows.
========
main.yml
========
#  variables for mytomcat-role

admin_username: admin
admin_password: admin

user1_name: tomcat
user1_password: tomcat

11)  Create defaults folder  mytomcat-role folder

12) Write main.yml in vars  folder as follows.
========
main.yml
========
#  Default variables for mytomcat-role

admin_username: admin
admin_password: admin

user1_name: tomcat
user1_password: tomcat


13)  Create files folder  mytomcat-role folder

14) Place the required files here
*** We are considering following files 
a) myjlcapp.war
b) apache-tomcat-8.5.53.tar.gz

15)  Create handlers folder   mytomcat-role folder

16) Write main.yml in handlers folder as follows.
========
main.yml
========
---
# handlers for Tomcat

- name: Stop Tomcat
  service: 
    name: shutdown 
    state: stoped

- name: Start Tomcat
  service: 
    name: startup 
    state: started

17)  Create tasks folder  mytomcat-role folder

18) Write install-java.yml in tasks folder as follows.

========
install-java.yml
========

- name: Install Java 1.8 Ubuntu
  apt:
    name: openjdk-8-jdk
    state: present
  when: ansible_os_family == 'Debian'
- name: Install Java 1.8 RedHat
  yum: 
    name: java-1.8.0-openjdk
    state: present
  when: ansible_os_family == 'RedHat'

19) Write configure-user.yml in tasks folder as follows.

========
configure-user.yml
========
- name: add group "tomcat"
  group:
    name: tomcat
    
- name: add user "tomcat"
  user:
    name: tomcat
    group: tomcat


20) Write install-tomcat.yml in tasks folder as follows.

========
install-tomcat.yml
========
- name: copy Tomcat tar file
  copy:
    src: files/apache-tomcat-8.5.53.tar.gz
    dest: /tmp

- name: Extract archive
  shell: /bin/tar xvf /tmp/apache-tomcat-8.5.53.tar.gz -C /opt

- name: create Symlink
  file:
    src: /opt/apache-tomcat-8.5.53
    path: /opt/tomcat
    owner: tomcat
    group: tomcat
    state: link

- name: Change ownership of Tomcat installation
  file:
    path: /opt/tomcat/
    owner: tomcat
    group: tomcat
    mode: 0755
    state: directory
    recurse: yes

- name: create tomcat.service file
  file:
    path: /etc/systemd/system/tomcat.service
    state: touch

- name: create tomcat service
  blockinfile:
    path: /etc/systemd/system/tomcat.service
    block: |
      [Unit]
      Description=Tomcat - instance %i
      After=syslog.target network.target
      [Service]
      Type=forking
      User=tomcat
      Group=tomcat
      Environment="CATALINA_HOME=/opt/tomcat/"
      ExecStart=/opt/tomcat/bin/startup.sh
      ExecStop=/opt/tomcat/bin/shutdown.sh
      [Install]
      WantedBy=multi-user.target
      
- name: enable & start tomcat service
  systemd:
    name: tomcat
    state: started
    enabled: yes
    

21) Write main.yml in tasks folder as follows.
========
main.yml
========
---  
- name: install java
  include_tasks: install-java.yml

- name: config users
  include_tasks: configure-user.yml

- name: install tomcat
  include_tasks: install-tomcat.yml

- name: Copy tomcat-users.xml
  template: 
    src: templates/tomcat-users.xml
    dest: /opt/tomcat/conf/
  notify: 
    - Stop Tomcat
    - Start Tomcat

- name: Deploy myjlcbs.war to Tomcat
  copy: 
    src: files/myjlcbs.war
    dest: /opt/tomcat/webapps
  notify: 
    - Stop Tomcat
    - Start Tomcat


19) Update mytomcat-playbook.yml to include nginx-role developed above
=================
mytomcat-playbook.yml
================
---
- name: Using My Tomcat Role in playbook
  hosts: all
  become: true
  
  roles:
    - role: mytomcat-role

20) Now Every thing on Local. Move to Ansible controller 
=========================================================
scp  mytomcat-playbook.yml ubuntu@18.116.100.103:/home/ubuntu/MyWork
scp -r mytomcat-role ubuntu@18.116.100.103:/home/ubuntu/MyWork/roles
=========================================================

C) On Ansible Controller
===================
21)Check the Directory Structure and files on Ansible Controller as follows.

mytomcat-role/
├── README.md
├── defaults
│   └── main.yml
├── files
│   ├── apache-tomcat-8.5.53.tar.gz
│   └── myjlcapp.war
├── handlers
│   └── main.yml
├── tasks
│   ├── configure-user.yml
│   ├── install-java.yml
│   ├── install-tomcat.yml
│   └── main.yml
├── templates
│   └── tomcat-users.xml
└── vars
    └── main.yml

22) Run the Playbook

ansible-playbook mytomcat-playbook.yml

23) Test the Ngins Server running or not.

http://18.188.194.89:8080/
http://18.188.194.89:8080/myjlcapp
http://18.117.167.113:8080/
http://18.117.167.113:8080/myjlcapp



D) On MyNode1
===================
24)  Check on   MyNode1 

ssh ubuntu@18.224.1.215

cat  /opt/tomcat/conf/tomcat-users.xml
ls /opt/tomcat/webapps

25)  Check on   MyNode2
 
ssh ubuntu@3.19.228.17

cat  /opt/tomcat/conf/tomcat-users.xml
ls /opt/tomcat/webapps
===========================================

